{"version":3,"sources":["context/app.context.js","components/MyNav.js","components/LottieControl.js","components/TodoList.js","config.js","components/TodoDetail.js","components/AddForm.js","components/EditForm.js","components/SignIn.js","components/SignUp.js","components/MyMap.js","components/MyCalendar.js","components/Chatbot.js","components/CheckoutForm.js","components/StripeApp.js","App.js","index.js"],"names":["UserContext","createContext","UserProviderWrapper","props","useState","user","setUser","Provider","value","name","children","MyNav","useContext","Navbar","bg","expand","Toggle","Collapse","id","Nav","className","to","style","marginLeft","onClick","onLogout","LottieControl","height","width","defaultOptions","loop","autoplay","animationData","animation","rendererSettings","preserveAspectRatio","options","TodoList","someJson","setJson","useEffect","getData","a","axios","get","res","data","todos","length","map","elem","_id","Spinner","variant","API_URL","TodoDetail","todoId","useParams","todoDetail","setTodoDetail","withCredentials","response","btnDelete","description","src","image","AddForm","btnSubmit","onSubmit","type","placeholder","accept","Button","EditForm","btnEdit","event","defaultValue","theme","createTheme","SignIn","onSignIn","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","noValidate","mt","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","helperText","myError","error","mb","Grid","container","item","SignUp","navigate","useNavigate","handleSignUp","preventDefault","newUser","username","target","email","password","post","MyMap","position","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","Popup","MyCalendar","plugins","dayGridPlugin","interactionPlugin","dateClick","arg","alert","dateStr","Chatbot","d","m","s","document","createElement","async","getElementsByTagName","appendChild","window","kommunicate","_globals","CheckoutForm","stripe","useStripe","elements","useElements","message","setMessage","isLoading","setIsLoading","clientSecret","URLSearchParams","location","search","retrievePaymentIntent","then","paymentIntent","status","handleSubmit","e","confirmPayment","confirmParams","return_url","disabled","stripePromise","loadStripe","App","setClientSecret","fetch","method","headers","body","JSON","stringify","items","json","appearance","setTodos","console","log","setError","fetchingUser","setFetchingUser","userResponse","myImage","files","imageForm","FormData","append","imgResponse","newTodo","completed","handleEdit","editedTodo","patch","updatedTodos","handleDelete","delete","filteredTodos","filter","handleSignIn","handleLogout","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.743213fd.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nconst UserContext = createContext()\r\n\r\nfunction UserProviderWrapper(props){\r\n    let name = 'Manish'\r\n\r\n\r\n    const [user, setUser] = useState(null)\r\n\r\n    return (\r\n        <UserContext.Provider value={{name, user, setUser}}>\r\n            {props.children} \r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport {UserContext, UserProviderWrapper} ","import {Navbar, Nav} from  'react-bootstrap'\r\nimport {Link} from  'react-router-dom'\r\nimport {useContext} from 'react'\r\nimport {UserContext} from '../context/app.context'\r\n\r\nfunction MyNav(props) {\r\n\r\nconst {user} = useContext(UserContext)\r\n\r\nreturn (\r\n\t<Navbar  bg=\"light\"  expand=\"lg\">\r\n\t\t<Navbar.Toggle  aria-controls=\"basic-navbar-nav\"  />\r\n\t\t<Navbar.Collapse  id=\"basic-navbar-nav\">\r\n\t\t\t<Nav  className=\"mr-auto\">\r\n\t\t\t\t<Link  to=\"/\">Todos</Link>\r\n\t\t\t\t<Link  style={{marginLeft: '10px'}}  to=\"/add-form\">Add Todo</Link>\r\n\t\t\t\t{\r\n\t\t\t\t\tuser ? (\r\n\t\t\t\t\t\t<button onClick={props.onLogout}>Logout</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Link  style={{marginLeft: '10px'}}  to=\"/signin\">SignIn</Link>\r\n\t\t\t\t\t\t<Link  style={{marginLeft: '10px'}}  to=\"/signup\">SignUp</Link>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</Nav>\r\n\t\t</Navbar.Collapse>\r\n\t</Navbar>\r\n\t)\r\n}\r\nexport default MyNav","import React from  'react'\r\nimport Lottie from  'react-lottie';\r\n\r\nfunction LottieControl(props) {\r\n\r\n\tconst { height, width, animation } = props\r\n\t\r\n\tconst defaultOptions = {\r\n\t\tloop: true,\r\n\t\tautoplay: true,\r\n\t\tanimationData: animation,\r\n\t\trendererSettings: {\r\n\t\t\tpreserveAspectRatio: 'xMidYMid slice'\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Lottie  \r\n\t\t\t\toptions={defaultOptions}  \r\n\t\t\t\theight={height}  \r\n\t\t\t\twidth={width }\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default LottieControl","import axios from 'axios'\r\nimport React, {useState, useEffect} from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport LottieControl from './LottieControl'\r\n\r\nfunction TodoList(props) {\r\n\r\n    //creating this state to store our json\r\n    const [someJson, setJson] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            let res = await axios.get('https://assets5.lottiefiles.com/packages/lf20_0etcyzow.json')\r\n            setJson(res.data)\r\n        }\r\n\r\n        getData()\r\n    }, [])\r\n\r\n    const {todos} = props\r\n\r\n    if(!todos.length || !someJson) {\r\n        return <Spinner animation=\"grow\" variant=\"dark\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LottieControl animation={someJson} width={500} height={500}/>\r\n            <p>TodoList Component</p>\r\n            {\r\n                todos.map((elem) => {\r\n                    return (\r\n                        <div>\r\n                            <Link to={`/todo/${elem._id}`}>{elem.name}</Link>\r\n                        </div>    \r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","// const API_URL = 'http://localhost:5005/api'\r\nconst API_URL = 'https://wdftoct-final.herokuapp.com/api'\r\n\r\n\r\nexport {API_URL}","import {useState, useEffect} from 'react'\r\nimport {useParams, Link, Navigate} from 'react-router-dom'\r\nimport {Spinner} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\n\r\nfunction TodoDetail(props) {\r\n    // We get this 'todoId' from the <Route path=\"/todo/:todoId \"> we defined in App.js\r\n    const {todoId} = useParams()\r\n\r\n    const [todoDetail, setTodoDetail] = useState(null)\r\n\r\n    // This will run just ONCE after the component has mounted\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n           // Fetching info for a single todo  \r\n           let response = await axios.get(`${API_URL}/todos/${todoId}`,{withCredentials: true})\r\n           setTodoDetail(response.data)\r\n        }\r\n        getData()\r\n    }, [])\r\n\r\n    // Ensuring only logged in users see the page\r\n    if (!props.user) {\r\n        return <Navigate to=\"/signin\" />\r\n    }\r\n\r\n    if(!todoDetail) {\r\n        return <Spinner animation=\"grow\" variant=\"dark\" />\r\n    }\r\n\r\n    const {btnDelete} = props\r\n\r\n    return (\r\n        <div>\r\n            <h2>Todo Detail Component</h2>\r\n            <h4>Name: {todoDetail.name}</h4>\r\n            <h4>Desc: {todoDetail.description}</h4>\r\n            <img src={todoDetail.image} />\r\n            <button>\r\n                <Link to={`/todo/${todoDetail._id}/edit`} >Edit</Link>\r\n            </button>\r\n            <button onClick={() => { btnDelete(todoDetail._id)  }  } >Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoDetail\r\n","import {Button} from  'react-bootstrap'\r\nimport {useContext} from 'react';\r\nimport {UserContext} from '../context/app.context'\r\n\r\nfunction AddForm(props){\r\n\r\n\tconst {name} = useContext(UserContext)\r\n\r\n\t// Props will look like\r\n\t/*\r\n\t\tprops = {\r\n\t\t\tbtnSubmit: Function\r\n\t\t}\r\n\t*/\r\n\r\n\r\n\tconst {btnSubmit} = props\r\n\treturn (\r\n\t\t<form onSubmit={btnSubmit}>\r\n\t\t\t<p>Name is {name} </p>\r\n\t\t\t<input  name=\"name\"  type=\"text\"  placeholder=\"Enter name\"/>\r\n\t\t\t<input  name=\"description\"  type=\"text\"  placeholder=\"Enter desc\"/>\r\n\t\t\t<input  type=\"file\"  name=\"myImage\"  accept=\"image/png, image/jpg\"  />\r\n\r\n\t\t\t<Button  type=\"submit\"  >Submit</Button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default AddForm","import {useState, useEffect} from 'react'\r\nimport {useParams, Link} from 'react-router-dom'\r\nimport {Spinner} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../config'\r\n\r\nfunction EditForm(props) {\r\n    const {todoId} = useParams()\r\n\r\n    const [todoDetail, setTodoDetail] = useState(null)\r\n\r\n    // This will run just ONCE after the component has mounted\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n           // Fetching info for a single todo  \r\n           let response = await axios.get(`${API_URL}/todos/${todoId}`, {withCredentials: true})\r\n           setTodoDetail(response.data)\r\n        }\r\n        getData()\r\n    }, [])\r\n\r\n    if(!todoDetail) {\r\n        return <Spinner animation=\"grow\" variant=\"dark\" />\r\n    }\r\n\r\n    const {btnEdit} = props\r\n    return (\r\n        <div>\r\n            <h3>Edit Component</h3>\r\n\r\n            <form onSubmit={(event) => { btnEdit(event, todoDetail._id)  }} >\r\n            \r\n            {/* event is passed automatically when 'btnEdit' is invoked by the browser */}\r\n            {/* <form onSubmit={btnEdit} > */}\r\n\r\n                <input defaultValue={todoDetail.name} name=\"name\"  type=\"text\"  placeholder=\"Enter name\"/>\r\n                <input defaultValue={todoDetail.description} name=\"description\"  type=\"text\"  placeholder=\"Enter desc\"/>\r\n                <button  type=\"submit\"  >Edit</button>\r\n\t\t    </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditForm\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst theme = createTheme();\r\n\r\nfunction SignIn(props) {\r\n\r\n  //props will look like this\r\n  /*\r\n      props = {\r\n        onSignIn: Function\r\n      }\r\n\r\n  */\r\n\r\n  const {onSignIn} = props\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={onSignIn} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              helperText={props.myError ? props.myError : '' }\r\n              error={props.myError ? true: false}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link to=\"/signup\" >\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default SignIn","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n// import {Container, Typography, Box} from '@mui/material'\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { API_URL } from '../config';\r\n\r\nconst theme = createTheme();\r\n\r\nfunction SignUp(props) {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const handleSignUp = async (event) => {\r\n    event.preventDefault()\r\n    let newUser = {\r\n      username: event.target.username.value,\r\n      email: event.target.email.value,\r\n      password: event.target.password.value\r\n    }\r\n    //Don't forget to import axios\r\n    await axios.post(`${API_URL}/signup`, newUser, {withCredentials: true})  \r\n    navigate('/signin')\r\n  } \r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSignUp} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link to=\"/signin\" >\r\n                  {\"Already have an account? Sign In instead\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default SignUp","import React from  'react'\r\nimport {MapContainer, TileLayer, Marker, Popup} from  'react-leaflet'\r\n//Don't forget to import the css\r\nimport  'leaflet/dist/leaflet.css'\r\n\r\n  \r\nfunction MyMap() {\r\n    //Some random co-ordinate\r\n\tconst position = [51.505, -0.09]\r\n\r\n    //Do not forget to set a width and height style to your map. Else it won't show up\r\n\treturn (\r\n\t<div>\r\n\t\t<MapContainer  \r\n\t\t\tstyle={{width: '800px', height: '500px'}} \r\n\t\t\tcenter={position}  zoom={13}  \r\n\t\t\tscrollWheelZoom={false}>\r\n\t\t\t<TileLayer\r\n\t\t\t\tattribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n\t\t\t/>\r\n\t\t\t<Marker  position={position}>\r\n\t\t\t\t<Popup >\r\n\t\t\t\t\tA pretty CSS3 popup. <br  /> Easily customizable.\r\n\t\t\t\t</Popup>\r\n\t\t\t</Marker>\r\n\t\t</MapContainer>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport  default MyMap","import FullCalendar from  '@fullcalendar/react'\r\nimport dayGridPlugin from  '@fullcalendar/daygrid'\r\nimport interactionPlugin from  \"@fullcalendar/interaction\"; // needed for dayClick\r\n\r\nfunction MyCalendar() {\r\n\tconst handleDateClick = (arg) => { \r\n\t\talert(arg.dateStr)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={{width: '500px', height: '600px'}}>\r\n\t\t\t<FullCalendar\r\n\t\t\t\tplugins={[ dayGridPlugin, interactionPlugin ]}\r\n\t\t\t\tdateClick={handleDateClick}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default MyCalendar ","import {useEffect} from 'react'\r\n\r\nfunction Chatbot() {\r\n\r\n    useEffect(() => {\r\n        (function(d, m){\r\n            var kommunicateSettings = {\"appId\":\"99796ab26534ba4c81b61a86edf15bf\",\"popupWidget\":true,\"automaticChatOpenOnNavigation\":true};\r\n            var s = document.createElement(\"script\"); s.type = \"text/javascript\"; s.async = true;\r\n            s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\r\n            var h = document.getElementsByTagName(\"head\")[0]; h.appendChild(s);\r\n            window.kommunicate = m; m._globals = kommunicateSettings;\r\n          })(document, window.kommunicate || {});\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatbot\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  PaymentElement,\r\n  useStripe,\r\n  useElements\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!stripe) {\r\n      return;\r\n    }\r\n\r\n    const clientSecret = new URLSearchParams(window.location.search).get(\r\n      \"payment_intent_client_secret\"\r\n    );\r\n\r\n    if (!clientSecret) {\r\n      return;\r\n    }\r\n\r\n    stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\r\n      switch (paymentIntent.status) {\r\n        case \"succeeded\":\r\n          setMessage(\"Payment succeeded!\");\r\n          break;\r\n        case \"processing\":\r\n          setMessage(\"Your payment is processing.\");\r\n          break;\r\n        case \"requires_payment_method\":\r\n          setMessage(\"Your payment was not successful, please try again.\");\r\n          break;\r\n        default:\r\n          setMessage(\"Something went wrong.\");\r\n          break;\r\n      }\r\n    });\r\n  }, [stripe]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        // Make sure to change this to your payment completion page\r\n        return_url: \"http://localhost:3000\",\r\n      },\r\n    });\r\n\r\n    // This point will only be reached if there is an immediate error when\r\n    // confirming the payment. Otherwise, your customer will be redirected to\r\n    // your `return_url`. For some payment methods like iDEAL, your customer will\r\n    // be redirected to an intermediate site first to authorize the payment, then\r\n    // redirected to the `return_url`.\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n    } else {\r\n      setMessage(\"An unexpected error occured.\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <PaymentElement id=\"payment-element\" />\r\n      <button disabled={isLoading || !stripe || !elements} id=\"submit\">\r\n        <span id=\"button-text\">\r\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\r\n        </span>\r\n      </button>\r\n      {/* Show any error or success messages */}\r\n      {message && <div id=\"payment-message\">{message}</div>}\r\n    </form>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\n\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport \"./StripeApp.css\";\r\nimport { API_URL } from \"../config\";\r\n\r\n// Make sure to call loadStripe outside of a component’s render to avoid\r\n// recreating the Stripe object on every render.\r\n// This is your test publishable API key.\r\nconst stripePromise = loadStripe(\"pk_test_51K43BHSDNDED5cLrIMDvJu6n7xpQ7gKJy6Nvpg2GF9lGGNBPy7BPFz9ZT92ZDoxFTRY8m9NvmQkGnqEN9lGJETj000ZNUStfyR\");\r\n\r\nexport default function App() {\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Create PaymentIntent as soon as the page loads\r\n    const getData = async () => {\r\n        let res = await fetch(`${API_URL}/create-payment-intent`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ items: [{ id: \"xl-tshirt\" }] }),\r\n          })\r\n        let data = await res.json();\r\n        setClientSecret(data.clientSecret)\r\n    }\r\n\r\n    getData()\r\n  }, []);\r\n\r\n  const appearance = {\r\n    theme: 'stripe',\r\n  };\r\n  const options = {\r\n    clientSecret,\r\n    appearance,\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {clientSecret && (\r\n        <Elements options={options} stripe={stripePromise}>\r\n          <CheckoutForm />\r\n        </Elements>\r\n      )}\r\n    </div>\r\n  );\r\n}","import { Routes, Route } from  \"react-router-dom\";\r\nimport MyNav from \"./components/MyNav\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport TodoDetail from \"./components/TodoDetail\";\r\nimport {useState, useEffect, useContext} from 'react'\r\nimport axios from \"axios\";\r\nimport AddForm from \"./components/AddForm\";\r\nimport EditForm from \"./components/EditForm\"\r\nimport {useNavigate } from 'react-router-dom'\r\nimport SignIn from \"./components/SignIn\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport {API_URL} from './config'\r\nimport {UserContext} from './context/app.context'\r\nimport MyMap from \"./components/MyMap\";\r\nimport MyCalendar from \"./components/MyCalendar\";\r\nimport Chatbot from \"./components/Chatbot\";\r\nimport StripeApp from './components/StripeApp'\r\n\r\nfunction App(){\r\n\r\n  const [todos, setTodos] = useState([])\r\n  // this state stores the logged in user info\r\n\r\n  console.log(useContext(UserContext))\r\n\r\n  // we use the 'useContext' hook here \r\n  // we tell react to consume all the values provided by the context UserContext\r\n  const {user, setUser} = useContext(UserContext)\r\n  const [myError, setError] = useState(null)\r\n  // setting it to 'true' so that we can show a loading screen and make the user wait until this API finishes\r\n  const [fetchingUser, setFetchingUser] = useState(true)\r\n  \r\n  // This hook is for us to redirect users to different urls\r\n  const navigate = useNavigate()\r\n\r\n  // This runs only --ONCE-- when the component is mounted\r\n  useEffect(() => {\r\n\r\n      const getData = async () => {\r\n          let response  = await axios.get(`${API_URL}/todos`,{withCredentials: true})\r\n          setTodos(response.data)\r\n\r\n          // -----------------------------------------------\r\n          // we make the user requst here to know if the user is logged in or not\r\n          try {\r\n            let userResponse = await axios.get(`${API_URL}/user`,{withCredentials: true})\r\n            setFetchingUser(false)\r\n            setUser(userResponse.data)\r\n          }\r\n          catch(err){\r\n            // the request will fail if the user is not logged in \r\n            setFetchingUser(false)\r\n          }\r\n          // -----------------------------------------------\r\n\r\n      }\r\n\r\n      getData()\r\n\r\n  }, [])\r\n\r\n  // Runs everytime 'todos' gets updates - a conditional did update\r\n  useEffect(() => {\r\n    navigate('/')\r\n  }, [todos, user])\r\n\r\n  const handleSubmit = async (event) => {\r\n      event.preventDefault()\r\n      //first upload the image to cloudinary\r\n      console.log(event.target.myImage.files[0])\r\n\r\n      // Create the form data with the key 'imageUrl' because our server expects the formdata with they key 'imageUrl'\r\n      let imageForm = new FormData()\r\n      imageForm.append('imageUrl', event.target.myImage.files[0])\r\n\r\n      let imgResponse = await axios.post(`${API_URL}/upload`, imageForm)\r\n      console.log(imgResponse.data)\r\n\r\n      let newTodo = {\r\n        name: event.target.name.value,\r\n        description: event.target.description.value,\r\n        completed: false,\r\n        image: imgResponse.data.image\r\n      }\r\n      // Pass an object as a 2nd param in POST requests\r\n      let response = await axios.post(`${API_URL}/create`, newTodo, {withCredentials: true})\r\n      setTodos([response.data, ...todos])\r\n  }\r\n\r\n  const handleEdit = async (event, id) => {\r\n      event.preventDefault()\r\n      let editedTodo = {\r\n        name: event.target.name.value,\r\n        description: event.target.description.value,\r\n        completed: false,\r\n      }\r\n      // Pass an object as a 2nd param in POST requests\r\n      let response = await axios.patch(`${API_URL}/todos/${id}`, editedTodo, {withCredentials: true})\r\n      // Update our state 'todos' with the edited todo so that the user see the upadted info without refrshing the page\r\n\r\n      // We have the updated todo here\r\n      console.log(response.data)\r\n\r\n      let updatedTodos = todos.map((elem) => {\r\n          if (elem._id == id) {\r\n              elem.name = response.data.name\r\n              elem.description = response.data.description\r\n          }\r\n          return elem\r\n      })\r\n\r\n      setTodos(updatedTodos)\r\n      \r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    // make a request to the server to delete it from the database\r\n    await axios.delete(`${API_URL}/todos/${id}`)\r\n\r\n    // Update your state 'todos' and remove the todo that was deleted\r\n    let filteredTodos = todos.filter((elem) => {\r\n      return elem._id !== id\r\n    })\r\n\r\n    setTodos(filteredTodos)\r\n  }\r\n\r\n  const handleSignIn = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      let newUser = {\r\n        email: event.target.email.value,\r\n        password: event.target.password.value\r\n      }\r\n  \r\n      let response = await axios.post(`${API_URL}/signin`, newUser, {withCredentials: true})\r\n      setUser(response.data)\r\n    }\r\n    catch(err){\r\n      //console.log(err.response)\r\n      setError(err.response.data)\r\n    }\r\n  }\r\n\r\n  const handleLogout = async () => {\r\n      await axios.post(`${API_URL}/logout`, {}, {withCredentials: true})\r\n      setUser(null)\r\n  }\r\n\r\n  // Wait for the '/api/user' request to finish so that we know if the user is loggedin or not\r\n  if (fetchingUser) {\r\n    return <p>Loading user info. . . </p>\r\n  }\r\n\r\n  console.log('manishhhhh')\r\n\treturn (\r\n\t\t<div>\r\n      <StripeApp />\r\n      <Chatbot /> \r\n      <MyCalendar />\r\n      <MyMap />\r\n      <MyNav onLogout={handleLogout} />\r\n\t\t\t<h1>Shopping List</h1>\r\n      <Routes>\r\n          <Route path=\"/\" element={<TodoList todos={todos} /> } />\r\n          <Route path=\"/add-form\" element={<AddForm btnSubmit={handleSubmit}/> } />\r\n          <Route path=\"/todo/:todoId\" element={<TodoDetail user={user} btnDelete={handleDelete} />} />\r\n          <Route path=\"/todo/:todoId/edit\" element={<EditForm btnEdit={handleEdit}/>} />\r\n          <Route  path=\"/signin\" element={<SignIn myError={myError} onSignIn={handleSignIn} />}/>\r\n          <Route  path=\"/signup\" element={<SignUp />}/>\r\n      </Routes>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport  default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport  'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport {UserProviderWrapper} from './context/app.context'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <UserProviderWrapper>\r\n        <App />\r\n      </UserProviderWrapper>  \r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}